{"version":3,"sources":["../node_modules/web3-eth-accounts/src sync","util/getWeb3.ts","App.tsx","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getWeb3","a","Promise","reject","window","addEventListener","ethereum","web3","enable","local","Web3","currentProvider","TruffleContract","require","App","props","state","approve","bind","wrap","eth","getAccounts","userAddress","net","getId","networkId","networkName","wrappedTokenContract","WbombContract","setProvider","deployed","wrappedToken","defaultAccount","balanceOf","call","wrappedBalance","toString","baseTokenContract","BombContract","at","baseToken","allowance","address","baseAllowance","baseBalance","this","setState","formApproveAmount","formWrapAmount","localWeb3","spender","receipt","console","log","className","href","htmlFor","type","value","onChange","target","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4aa19cff.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 323;","import Web3 from 'web3'\n\nconst LOCAL_BLOCKCHAIN = 'http://localhost:8545'\n\ninterface Window {\n  ethereum?: any,\n  web3?: Web3\n}\n\nexport interface Web3Environment {\n  local: boolean\n  web3: Web3\n}\n\nexport default async function getWeb3(): Promise<Web3Environment> {\n  return new Promise(function(resolve, reject) {\n    window.addEventListener('load', async () => {\n      const { ethereum, web3 } = window as Window\n\n      if (ethereum) {\n        try {\n          await ethereum.enable()\n          resolve({ local: false, web3: new Web3(ethereum) })\n        } catch (error) {\n          reject(error)\n        }\n      }\n\n      else if (web3) {\n        resolve({ local: false, web3: new Web3(web3.currentProvider) })\n      }\n\n      else if (process.env.NODE_ENV !== 'production') {\n        // Fall back to localhost.\n        const provider = new Web3.providers.HttpProvider(LOCAL_BLOCKCHAIN)\n        resolve({ local: true, web3: new Web3(provider) })\n      }\n\n      else {\n        reject()\n      }\n    })\n  })\n}\n","import React, { Component } from 'react'\nimport Web3 from 'web3'\nimport BombContract from './contracts/BOMBv3.json'\nimport WbombContract from './contracts/WBOMB.json'\nimport getWeb3 from './util/getWeb3'\nimport './App.css'\n\nconst TruffleContract = require('@truffle/contract')\n\ninterface Props {\n}\n\ninterface State {\n  baseAllowance?: string,\n  baseBalance?: string,\n  baseToken?: any,\n  formApproveAmount?: string,\n  formWrapAmount?: string,\n  localWeb3?: boolean,\n  userAddress?: string,\n  networkId?: number,\n  networkName?: string,\n  web3?: Web3,\n  wrappedBalance?: string,\n  wrappedToken?: any,\n}\n\nexport default class App extends Component<Props, State> {\n\n  constructor(props) {\n    super(props)\n    this.state = {}\n\n    // TOOD: Fix.\n    this.approve = this.approve.bind(this)\n    this.wrap = this.wrap.bind(this)\n  }\n\n  async componentWillMount() {\n    // Get network provider and web3 instance.\n    // See utils/getWeb3 for more info.\n\n    const { local, web3 } = await getWeb3()\n    const userAddress = (await web3.eth.getAccounts())[0]\n\n    const networkId = await web3.eth.net.getId()\n    let networkName = 'unknown'\n    switch (networkId) {\n      case 1:\n        networkName = 'main'\n        break\n      case 42:\n        networkName = 'Kovan'\n        break\n    }\n\n    const wrappedTokenContract = TruffleContract(WbombContract)\n    wrappedTokenContract.setProvider(web3.currentProvider)\n    const wrappedToken = await wrappedTokenContract.deployed()\n    web3.eth.defaultAccount = userAddress\n    const wrappedBalance = (await wrappedToken.balanceOf.call(userAddress)).toString()\n\n    const baseTokenContract = TruffleContract(BombContract)\n    baseTokenContract.setProvider(web3.currentProvider)\n    let baseToken\n    if (networkId === 1) {\n      baseToken = await baseTokenContract.at('0x1C95b093d6C236d3EF7c796fE33f9CC6b8606714')\n    } else {\n      baseToken = await baseTokenContract.deployed()\n    }\n    web3.eth.defaultAccount = userAddress\n    const baseAllowance = (await baseToken.allowance.call(userAddress, wrappedToken.address)).toString()\n    const baseBalance = (await baseToken.balanceOf.call(userAddress)).toString()\n\n    this.setState({\n      baseAllowance,\n      baseBalance,\n      baseToken,\n      formApproveAmount: '',\n      formWrapAmount: '',\n      localWeb3: local,\n      networkId,\n      networkName,\n      userAddress,\n      web3,\n      wrappedBalance,\n      wrappedToken,\n    })\n  }\n\n  async approve() {\n    const spender = this.state.wrappedToken.address\n    const receipt = await this.state.baseToken.approve.call(spender, this.state.formApproveAmount)\n    console.log('Approve operation:', receipt)\n  }\n\n  async wrap() {\n    const receipt = await this.state.wrappedToken.wrap.call(this.state.formWrapAmount)\n    console.log('Wrap operation:', receipt)\n  }\n\n  render() {\n    let updateApproveAmount = (e) => {\n      this.setState({ formApproveAmount: e.target.value })\n    }\n    let updateWrapAmount = (e) => {\n      this.setState({ formWrapAmount: e.target.value })\n    }\n\n    return (\n      <div className=\"App\">\n        <nav className=\"navbar pure-menu pure-menu-horizontal\">\n          <a href=\"/\" className=\"pure-menu-heading pure-menu-link\">WBOMB</a>\n        </nav>\n\n        <main className=\"container\">\n          <div className=\"pure-g\">\n            <div className=\"pure-u-1-1\">\n\n              <h1>Wrapped-BOMB</h1>\n              <p>The future of de-fused self-destructing digital assets has arrived.</p>\n              <p><em>“Your deflation is my opportunity.”</em></p>\n\n              <h2>Wrap and unwrap</h2>\n\n              {this.state.web3 &&\n                <div>\n                  {this.state.localWeb3 &&\n                    <p className=\"status-fail\">\n                      DEV-ONLY: Could not find injected web3, using local blockchain.\n                    </p>\n                  }\n\n                  <p>Status: Connected to <strong>{this.state.networkName}</strong> network with account:</p>\n                  <p>{this.state.userAddress}</p>\n\n                  <p>Balances:</p>\n                  <ul>\n                    <li>BOMB: {this.state.baseBalance}</li>\n                    <li>WBOMB: {this.state.wrappedBalance}</li>\n                  </ul>\n\n                  <p>Allowances:</p>\n                  <ul>\n                    <li>BOMB: {this.state.baseAllowance}</li>\n                  </ul>\n\n                  <div className=\"form-row\">\n                    <label htmlFor=\"approve-amount\">Set BOMB allowance:</label>\n                    <input\n                      type=\"number\"\n                      id=\"approve-amount\"\n                      value={this.state.formApproveAmount}\n                      onChange={updateApproveAmount}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={this.approve}>\n                      Set allowance\n                    </button>\n                  </div>\n\n                  <div className=\"form-row\">\n                    <label htmlFor=\"wrap-amount\">Number of BOMB tokens to wrap:</label>\n                    <input\n                      type=\"number\"\n                      id=\"wrap-amount\"\n                      value={this.state.formWrapAmount}\n                      onChange={updateWrapAmount}\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={this.wrap}>\n                      Wrap\n                    </button>\n                  </div>\n\n                  <h2>How it works</h2>\n                  <p>\n                    WBOMB (Wrapped-BOMB) is an ERC-20 token wrapping BOMB, similar to the way WETH\n                    acts as an ERC-20 wrapper for Ether.\n                    The WBOMB smart contract makes BOMB and WBOMB interchangeable, one-to-one, via the “wrap”\n                    and “unwrap” functions, with the caveat that 1% (rounded-up) of the wrapped or unwrapped BOMBs\n                    will “explode” (i.e. will be burned) upon each wrap or unwrap operation.\n                  </p>\n                  <p>\n                    The advantage offered by WBOMB is that unlike regular BOMB, wrapped BOMB tokens can be\n                    traded freely without triggering the “self-destruct” deflationary mechanism of the BOMB\n                    token. Once one's BOMB tokens have been wrapped, they will no longer “explode” until they\n                    are unwrapped. WBOMB therefore carries the full value of BOMB but provides more utility\n                    because it doesn't explode.\n                  </p>\n                  <p>\n                    A second feature of WBOMB is that once a BOMB is wrapped, it can be divided and traded in\n                    increments of one nonillionth (i.e. 10<sup>-30</sup>) of a BOMB, making WBOMB useful\n                    for microtransactions. Note, however, that only whole WBOMBs can be unwrapped.\n                  </p>\n\n                </div>\n              }\n\n              {!this.state.web3 &&\n                <p>Could not find web3. Please install MetaMask or another web3 provider to use this app.</p>\n              }\n            </div>\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './vendor/pure-min.css'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}